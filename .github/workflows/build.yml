name: Build Image
on:
  workflow_call:
    inputs:
      context:
        description: Docker Context
        required: true
        type: string

      dockerfile:
        description: Dockerfile location
        required: true
        type: string

      runs-on:
        default: "['ubuntu-latest']"
        description: Override the image to run on
        required: false
        type: string

      dotnet-tag:
        description: The dotnet tag to pass to the Dockerfile e.g. 6.0-alpine3.16-arm64v8
        required: false
        type: string

      image-tag-suffix:
        description: The image tag suffix e.g. -arm
        required: false
        type: string

      repository:
        description: ECR repository name
        required: true
        type: string

jobs:
  build-image:
    name: Build Image
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    steps:
      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-region: us-east-1
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ vars.ECR_BUILD_ROLE }}

      - uses: aws-actions/amazon-ecr-login@v1
        id: ecr

      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ${{ steps.ecr.outputs.registry }}/${{ inputs.repository }}
          tags: |
            type=ref,event=branch,suffix=${{ inputs.image-tag-suffix }}
            type=sha,format=long,suffix=${{ inputs.image-tag-suffix }}

      - uses: docker/setup-buildx-action@v2

      - uses: docker/build-push-action@v3
        with:
          build-args: |
            GITHUB_TOKEN=${{ secrets.BUILD_GITHUB_TOKEN }}
            GITHUB_USERNAME=OrthoFi
            RUNTIME_TAG=${{ inputs.dotnet-tag }}
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
