name: Build Image
on:
  workflow_call:
    inputs:
      context:
        description: Docker Context
        required: true
        type: string

      dockerfile:
        description: Dockerfile location
        required: true
        type: string

      repository:
        description: ECR repository name
        required: true
        type: string

jobs:
  build-image:
    name: Build Image
    strategy:
      matrix:
        platform: [x64, arm64]
    runs-on: ${{ matrix.platform == 'arm64' && fromJSON('["self-hosted", "linux", "arm64"]') || fromJSON('["ubuntu-latest"]') }}
    steps:
      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-access-key-id: ${{ secrets.BUILD_AWS_ACCESS_KEY_ID }}
          aws-region: us-east-1
          aws-secret-access-key: ${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ vars.ECR_BUILD_ROLE }}

      - uses: aws-actions/amazon-ecr-login@v1
        id: ecr

      - uses: docker/metadata-action@v4
        id: meta
        with:
          images: ${{ steps.ecr.outputs.registry }}/${{ inputs.repository }}
          tags: |
            type=ref,event=branch,suffix=${{ matrix.platform == 'arm64' && '-arm' || '' }}
            type=sha,format=long,suffix=${{ matrix.platform == 'arm64' && '-arm' || '' }}

      - uses: docker/setup-buildx-action@v2

      - uses: docker/build-push-action@v3
        with:
          build-args: |
            GITHUB_TOKEN=${{ secrets.BUILD_GITHUB_TOKEN }}
            GITHUB_USERNAME=OrthoFi
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
